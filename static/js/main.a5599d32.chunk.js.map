{"version":3,"sources":["Components/Container.js","App.js","serviceWorker.js","index.js"],"names":["_","require","styles","container","width","height","marginTop","border","marginLeft","insideContainer","position","sliderContainer","distances","immediate","near","far","originCoord","Container","props","onChange","value","console","log","setState","currentTimestamp","data","getMarks","timestamps","forEach","key","marks","currentTS","toArray","state","distance1","distance2","distance3","this","item","id","distance","tel1Position","tel2Position","tel3Position","style","className","left","top","step","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5599d32.chunk.js","sourcesContent":["import React from 'react';\nimport {CartesianGrid, Legend, Scatter, ScatterChart, Tooltip, XAxis, YAxis, ZAxis} from \"recharts\";\nimport Slider from \"rc-slider\";\nimport 'rc-slider/assets/index.css';\nvar _ = require('lodash');\n\nlet styles = {\n    container: {\n        width: '900px',\n        height: '400px',\n        marginTop: \"200px\",\n        border: \"1px solid grey\",\n        marginLeft: '51px',\n    },\n    insideContainer: {\n        width: '800px',\n        height: '400px',\n        position: 'relative',\n        marginTop: '50px',\n    },\n    sliderContainer: {\n        width: '600px',\n        marginLeft: '51px',\n        marginTop: '40px',\n    },\n\n};\n\nconst pointsColors = {\n    0: \"#d81c0a\",\n    1: \"#8884d8\",\n    2: \"#82ca9d\",\n    3: \"#ff8734\"\n};\n\nconst distances = {\n    immediate: 50,\n    near: 100,\n    far: 200\n};\n\nconst pointsYDistance= {\n    1: 100,\n    2: 200,\n    3: 300\n};\n\nconst originCoord = {\n    left: 400,\n    top: 200\n};\n\nclass Container extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.marks = this.getMarks();\n        let currentTS = _.toArray(this.marks)[0];\n        this.state = {\n            currentTimestamp: data[currentTS]\n        }\n    }\n\n    onChange = (value) => {\n        console.log(\"Slider \", value);\n        this.setState({\n            currentTimestamp: data[value]\n        });\n    }\n\n    getMarks= () => {\n        let timestamps = {};\n        _.forEach(data, (value, key) => {\n            timestamps[key] = key;\n        });\n        return timestamps\n    };\n\n    render () {\n        const {currentTimestamp} = this.state;\n        let distance1, distance2, distance3;\n        _.forEach(currentTimestamp, (item)=>{\n            if ( item.id === 1 ) {\n                distance1 = distances[item.distance];\n            } else if ( item.id === 2 ) {\n                distance2 = distances[item.distance];\n            } else if ( item.id === 3) {\n                distance3 = distances[item.distance];\n            }\n        });\n        debugger;\n        let tel1Position = (distance1)? originCoord.left - distance1 : 0;\n        let tel2Position = (distance2)? originCoord.top - distance2 : 0;\n        let tel3Position = (distance3)? originCoord.left + distance3 : 0;\n        // styles.tel1.left = originCoord.left - distance1 + \"px\";\n        return (\n            <div style={styles.container}>\n                <div style={styles.insideContainer}>\n                    {distance1? (\n                        <div>\n                        <div className=\"line1\" style={{width: distance1, left: tel1Position}}/>\n                        <div className=\"tel1\" style={{left: tel1Position}}/>\n                        </div>\n                    ): null}\n                    {distance2? (\n                        <div>\n                            <div className=\"line2\" style={{height: distance2, top: tel2Position}}/>\n                            <div className=\"tel2\" style={{top: tel2Position}}/>\n\n\n                        </div>\n                    ): null}\n\n                    {distance3? (\n                    <div>\n                        <div className=\"line3\" style={{width: distance3}}/>\n                        <div className=\"tel3\" style={{left: tel3Position}}/>\n                    </div>\n                ): null}\n\n                    <div className=\"origin\"/>\n\n\n\n                </div>\n\n                <div style={styles.sliderContainer}>\n                    <Slider onChange={this.onChange} marks={this.marks} step={null}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst data =\n    {\n        \"10\":[\n            {\n                \"id\": 1,\n                \"distance\": \"immediate\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 3,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n        ],\n        \"20\":[\n            {\n                \"id\": 1,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"far\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n        ],\n        \"30\":[\n            {\n                \"id\": 1,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"far\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 3,\n                \"distance\": \"immediate\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n        ],\n        \"40\":[\n            {\n                \"id\": 1,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"far\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n        ],\n        \"50\":[\n            {\n                \"id\": 1,\n                \"distance\": \"immediate\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"far\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n        ],\n        \"60\":[\n            {\n                \"id\": 1,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 2,\n                \"distance\": \"far\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            },\n            {\n                \"id\": 3,\n                \"distance\": \"near\", // una tra 'i', 'n' e 'f', stanno per immediate, near e far\n            }\n        ]\n    }\n;\n\n\nexport default Container;\n","import React from 'react';\nimport Container from \"./Components/Container\";\nimport './App.css';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}